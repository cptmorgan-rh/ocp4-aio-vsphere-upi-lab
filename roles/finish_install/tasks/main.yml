 - name: Wait until the bootstrap VM finishes its restart after being built
   wait_for:
     port: 22
<<<<<<< HEAD
     host: "{{ bootstrap_vm.ipaddr }}"
=======
     host: {{ bootstrap_vm.ipaddr }}
>>>>>>> 2d8bb71b0668ac6bd16a1b00d73bc817e1ccbe96
     search_regex: OpenSSH
     delay: 10
     timeout: 3600
   register: result_wait

 - name: Wait for bootstrap to complete
   command: openshift-install --dir="{{ playbook_dir }}"/install-dir wait-for bootstrap-complete --log-level debug # noqa 301
   register: result_bootstrap

 - name: Delete Bootstrap
   command: "govc vm.destroy {{ infraID.stdout }}-{{ bootstrap_vm.name }}"  # noqa 301
   when: result_bootstrap.rc == 0

 - name: Wait for node-bootstraper csrs to approve
   shell: oc get csr -o json --kubeconfig="{{ playbook_dir }}"/install-dir/auth/kubeconfig | jq -r '.items[] | select(.status == {}) | .metadata.name' # noqa 204 301 306
   register: result_csr
   until: result_csr['stdout_lines']|count == worker_vms|count
   retries: 60
   delay: 60

 - name: Approve the csrs
   command: oc adm certificate approve "{{ item }}" --kubeconfig="{{ playbook_dir }}"/install-dir/auth/kubeconfig # noqa 301
   loop: "{{ result_csr['stdout_lines'] }}"

 - name: Wait for system:node csrs to approve
   shell: oc get csr -o json --kubeconfig="{{ playbook_dir }}"/install-dir/auth/kubeconfig | jq -r '.items[] | select(.status == {}) | .metadata.name'  # noqa 204 301 306
   register: result_system
   until: result_system['stdout_lines']|count == worker_vms|count
   retries: 60
   delay: 60

 - name: Approve the csrs
   command: oc adm certificate approve "{{ item }}" --kubeconfig="{{ playbook_dir }}"/install-dir/auth/kubeconfig # noqa 301
   loop: "{{ result_system['stdout_lines'] }}"

 - name: Wait for install complete
   command: openshift-install wait-for install-complete --dir={{ playbook_dir }}/install-dir --log-level debug # noqa 301
   register: result_complete

 - name: Output results from openshift-install wait-for install-complete
   debug:
     msg: "{{ result_complete.stderr | regex_findall('level=info.*') | list }}"
